nnodes = 441;
close all
nx = 10;
ny = 10;
% x = 0:0.1:1;
% y = 0:0.1:1;
N = 100;
A = xlsread('Amatrix.xlsx');
BT = xlsread('BTmatrix.xlsx');
D = xlsread('Dmatrix.xlsx');
F = xlsread('Ffmatrix.xlsx');
Nc = xlsread('Ncmatrix.xlsx');
Sorted = xlsread('Sorted.xlsx');
% C = xlsread('ConnectivityMatrix.xlsx');

ep = 0.01;
B = BT';
K = A + (B*BT)/ep;
L = F' + (B*D)/ep;
%Replace by SOR function
X = K\L;

Theta = (D - BT*X)/ep;

 iter = 1;
for i = 1:nnodes
    k = 0;
    for j = 1:length(Sorted) 
        if Sorted(j) == i;
            k = 1;
            break
        else
        end
    end
    if  k ==0;
        P(iter,1) = Nc(i,1);
        P(iter,2) = Nc(i,2);
        P(iter,3) = X(2*iter -1);
        P(iter,4) = X(2*iter);
        iter = iter + 1;
    end
end

for i = 1:N
    Xp(i) = rem(i,nx)
    if Xp(i) == 0;
        Xp(i) = nx;
    else
    end
    Yp(i) = fix((i-1)/nx);
end
Pfinal = zeros(10,50);
for i=1:50
    for j=1:50
        iter = 1;
        Theta(iter,1) = Pfinal(i,j)
        iter=iter+1
    end
end

[x,y] = meshgrid(Xp,Yp);
surf(x,y,Pfinal)
%quiver(P(:,1),P(:,2),P(:,3),P(:,4))
